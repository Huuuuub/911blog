{"version":3,"sources":["webpack:///./src/components/comments.js","webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["StyledComments","styled","div","id","Helmet","src","data-auto-init","query","Post","mdx","data","title","frontmatter","body","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"2LAIMA,E,UAAiBC,EAAOC,IAAV,2EAAGD,CAAH,uBAGL,oBACb,kBAACD,EAAD,KACE,yBAAKG,GAAG,aACR,kBAACC,EAAA,OAAD,KACE,4BACEC,IAAI,qDACJC,iBAAe,SAEjB,6FCVOC,EAAK,aAuBHC,UAXF,SAAC,GAAkB,IAAXC,EAAU,EAAhBC,KAAMD,IACZE,EAASF,EAAIG,YAAbD,MACCE,EAASJ,EAATI,KACR,OACE,oCACE,4BAAKF,GACJ,kBAAC,cAAD,KAAcE,GACf,kBAAC,EAAD,S,uBClBN,IAAMC,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBT,E,EAAAA,IAClBU,EAAgBJ,EAAQ,QAAxBI,YAERH,UAAiB,SAAqB,GAKlC,IAJFI,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbR,OAJF,GAQMmB,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-templates-post-js-2f378363a2ed1d968245.js","sourcesContent":["import React from 'react'\nimport { Helmet } from \"react-helmet\"\nimport styled from 'styled-components';\n\nconst StyledComments = styled.div`\n  margin-top: 128px;\n`;\nexport default () => (\n  <StyledComments>\n    <div id=\"commento\"/>\n    <Helmet>\n      <script\n        src=\"https://commento.thecodeisgreen.com/js/commento.js\"\n        data-auto-init=\"true\"\n      />\n      <script>\n        {`\n            console.log('Test', typeof $);\n        `}\n      </script>\n    </Helmet>\n  </StyledComments>\n)","import { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\nimport Comments from '../components/comments';\n\nexport const query = graphql`\n  query($ref: String!) {\n    mdx(frontmatter: { ref: {eq: $ref }}) {\n      frontmatter {\n        title\n        ref\n      }\n      body\n    }\n  }\n`;\n\nconst Post = ({data:{mdx}}) => {\n  const {title} = mdx.frontmatter\n  const { body } = mdx;\n  return (\n    <>\n      <h1>{title}</h1>\n      {<MDXRenderer>{body}</MDXRenderer>}\n      <Comments/>\n    </>\n  );\n};\nexport default Post;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}