{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/dateFromNow.js","webpack:///./src/components/title.js","webpack:///./src/components/postThumb.js","webpack:///./src/pages/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","DateFromNow","prefix","value","className","humanize","diff","Moment","duration","useState","setDiff","useEffect","intervalId","setInterval","clearInterval","useHumanizeLastUpdateDate","defaultProps","StyledTitle","styled","div","Title","title","date","StyledThumb","StyledBody","props","theme","color","StyledContent","StyledComment","PostThumb","post","body","to","ref","events","data","allMdx","nodes","map","key","frontmatter","query","React","useMDXComponents","mdx","useMDXScope","scope","components","children","mdxComponents","mdxScope","End","fullScope","keys","Object","values","fn"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,iNCkBTG,GAxBIF,EAAQ,QAwBE,SAAC,GAAD,IAClBG,EADkB,EAClBA,OACAC,EAFkB,EAElBA,MAFkB,OAIlB,yBAAKC,UAAU,gCACTF,EADN,IA1BgC,SAACC,GACjC,IAAME,EAAW,SAACF,GAChB,IAAMG,EAAOC,IAAOJ,GAAOG,KAAKC,OAChC,OAAOA,IAAOC,SAASF,GAAMD,UAAS,IAHG,EAMnBI,mBAASJ,EAASF,IAAnCG,EANoC,KAM9BI,EAN8B,KAmB3C,OAXAC,qBAAU,WACRD,EAAQL,EAASF,IACjB,IAAMS,EAAaC,aAAY,WAC7BH,EAAQL,EAASF,MAChB,KAEH,OAAQ,WACNW,cAAcF,MAEf,CAACT,IAEGG,EAQSS,CAA0BZ,MAI5CF,EAAYe,aAAe,CACzBd,OAAQ,IAGKD,QCnCTgB,EAAcC,IAAOC,IAAV,yEAAGD,CAAH,iNA8BFE,EAbD,SAAC,GAAD,IACZC,EADY,EACZA,MACAC,EAFY,EAEZA,KAFY,OAIZ,kBAACL,EAAD,KACE,4BAAKI,GACL,kBAAC,EAAD,CACEnB,OAAO,UACPC,MAAOmB,M,YCtBPC,GAFIxB,EAAQ,QAEEmB,IAAOC,IAAV,4EAAGD,CAAH,kHAQXM,EAAaN,IAAOC,IAAV,2EAAGD,CAAH,sGAOH,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,SAI5BC,EAAgBV,IAAOC,IAAV,8EAAGD,CAAH,4DAMbW,EAAgBX,IAAOC,IAAV,8EAAGD,CAAH,iKA+BJY,EAhBG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClB,OACE,kBAACR,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAOF,KAAMS,EAAKT,KAAMD,MAAOU,EAAKV,QACpC,kBAACO,EAAD,KACE,kBAAC,cAAD,KAAcG,EAAKC,MACnB,kBAACH,EAAD,KACA,kBAAC,OAAD,CAAMI,GAAE,SAAWF,EAAKG,KAAxB,kB,urBCpDK,sBAAe,IACtBC,EADqB,EAAXC,KACIC,OAAOC,MAC3B,OACE,oCACGH,EAAOI,KAAI,SAACR,GAAD,OACV,kBAAC,EAAD,CAAWS,IAAKT,EAAKU,YAAYP,IAAKH,KAAI,KAAMA,EAAKU,YAAX,CAAwBT,KAAMD,EAAKC,cALtE,IAWFU,EAAK,c,qrECflB,IAAMC,EAAQ5C,EAAd,Q,EACkCA,EAAQ,QAAlC6C,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgB/C,EAAQ,QAAxB+C,YAER9C,UAAiB,SAAqB,GAKlC,IAJF+C,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGxB,E,oIACF,sCACKyB,EAAgBN,EAAtB,GACMO,EAAWL,EAFhB,GAKKM,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbE,OAJF,GAQMS,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAd,GAAG,OAAIa,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACR,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYE,GAA9C","file":"component---src-pages-index-js-db0f06b991113556065c.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React, { useState, useEffect } from 'react';\nimport Moment from 'moment';\n\nconst R = require('ramda');\n\nconst useHumanizeLastUpdateDate = (value) => {\n  const humanize = (value) => {\n    const diff = Moment(value).diff(Moment());\n    return Moment.duration(diff).humanize(true);\n  };\n\n  const [diff, setDiff] = useState(humanize(value));\n\n  useEffect(() => {\n    setDiff(humanize(value));\n    const intervalId = setInterval(() => {\n      setDiff(humanize(value));\n    }, 10000);\n\n    return (() => {\n      clearInterval(intervalId);\n    });\n  }, [value]);\n\n  return diff;\n};\n\nconst DateFromNow = ({\n  prefix,\n  value\n}) => (\n  <div className=\"instagram-draft-last-update \">\n    {`${prefix} ${useHumanizeLastUpdateDate(value)}`}\n  </div>\n)\n\nDateFromNow.defaultProps = {\n  prefix: \"\"\n}\n\nexport default DateFromNow;","import React from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport DateFromNow from './dateFromNow'\n\nconst StyledTitle = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-end;\n  font-size: 11px;\n  padding: 0px 32px 16px 32px;\n  border-bottom: 1px solid #fafafa;\n  background-color: white;\n  &>h2 {\n    margin: 0px;\n    margin-right: 16px;\n  }\n  &>div {\n    padding-bottom: 1px;\n  }\n`;\n\nconst Title = ({\n  title,\n  date\n}) => (\n  <StyledTitle>\n    <h2>{title}</h2>\n    <DateFromNow \n      prefix=\"publiÃ© \"\n      value={date}\n    />\n  </StyledTitle>\n);\n\nexport default Title","import React from 'react'\nimport styled from 'styled-components'\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Title from './title'\nimport { Link } from \"gatsby\"\n\nconst R = require('ramda')\n\nconst StyledThumb = styled.div`\n  display: flex;\n  margin: 16px 0px 64px 0px;\n  width: 100%;\n  padding: 32px 0px;\n  background-color: white;\n  border-radius: 4px;\n`\nconst StyledBody = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  &>h2 {\n    font-size: 14px;\n    color: ${props => props.theme.color};\n  }\n`\n\nconst StyledContent = styled.div`\n  padding: 16px 32px;\n  width: 100%;\n  background-color: #fbfbfb;\n`;\n\nconst StyledComment = styled.div`\n  margin-top: 64px;\n  display: flex;\n  justify-content: center;\n  &>a {\n    font-size: 12px;\n    text-transform: uppercase;\n    color: #444;\n    text-decoration: none;\n    &:hover {\n      font-weight: bold;\n    }\n  }\n`;\n\nconst PostThumb = ({post}) => {\n  return (\n    <StyledThumb>\n      <StyledBody>\n        <Title date={post.date} title={post.title}/>\n        <StyledContent>\n          <MDXRenderer>{post.body}</MDXRenderer>\n          <StyledComment>\n          <Link to={`/post/${post.ref}`}>Commenter</Link>\n        </StyledComment>\n        </StyledContent>\n      </StyledBody>\n    </StyledThumb>\n  )\n}\n\nexport default PostThumb","import React from 'react'\nimport { graphql } from \"gatsby\"\nimport PostThumb from '../components/postThumb'\n\nexport default ({ data }) => {\n  const events = data.allMdx.nodes\n  return (\n    <>\n      {events.map((post) => (\n        <PostThumb key={post.frontmatter.ref} post={{...post.frontmatter, body: post.body}}/>\n      ))}\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter:{frontmatter:{template:{eq:\"post\"}}},\n      sort:{fields:[frontmatter___date], order: DESC}\n    ) {\n    nodes {\n      frontmatter {\n        date\n        ref\n        title\n        path\n      }\n      body\n    }\n  }}\n`","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}